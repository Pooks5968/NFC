
<html>
<head>
	<title>Android Permissions Demystified</title>
	<style>
		body {
			padding: 0;
			margin: 0;
			font-family: "Arial";
			background: url('stripe.png');
		}
		div#outermost {
			padding: 5%;
		}
		div#blurb {
			font-weight: bold;
			margin-bottom: 15px;
			padding-bottom: 15px;
			border-bottom: 1px #c7cad7 solid;
		}
		div#inner {
			background-color: #ffffff;
			padding: 30px;
			border: #7d7e82 solid 5px;
		}
		div.permissions {
			margin-bottom: 15px;
			padding-bottom: 15px;
			border-bottom: 1px #c7cad7 solid;
		}
		div#useful {
			padding-bottom: 3px;
			margin-bottom: 15px;
			border-bottom: 1px #c7cad7 solid;
		}
		span.ttitle {
			color: #106288;
			font-weight: bold;
		}
		li.space {
			padding-bottom: 15px;
		}
		a:link, a:hover, a:active {
			color: #336666;
		}
		a:visited {
			color: #666666;
		}
		img#stow { 
			cursor: pointer; 
		}
		span.code {
			color: #000;
		}
		div.leftHalf {
			float: left;
			width: 49%;
			word-wrap: break-word;
			background-color: #eee;
			margin-bottom: 5px;
			padding-top: 3px;
			padding-bottom: 3px;
		}
		div.rightHalf {
			padding-top: 3px;
			padding-bottom: 3px;
			float: right;
			margin-bottom: 5px;
			word-wrap: break-word;
			width: 49%;
			background-color: #eee;
		}
		div.leftThird {
			float: left;
			margin-right: 5px;
			word-wrap: break-word;
			background-color: #eee;
			margin-bottom: 5px;
			padding-top: 3px;
			padding-bottom: 3px;
			width: 10%;
		}
		div.middleThird {
			float: left;
			width: 43%;
			margin-right: 5px;
			word-wrap: break-word;
			background-color: #eee;
			margin-bottom: 5px;
			padding-top: 3px;
			padding-bottom: 3px;
		}
		div.rightThird {
			float: right;
			width: 45%;
			margin-right: 5px;
			word-wrap: break-word;
			background-color: #eee;
			margin-bottom: 5px;
			padding-top: 3px;
			padding-bottom: 3px;
		}
		div.leftThirdApi {
			float: left;
			margin-right: 5px;
			word-wrap: break-word;
			background-color: #eee;
			margin-bottom: 5px;
			padding-top: 3px;
			padding-bottom: 3px;
			width: 50%;
		}
		div.middleThirdApi {
			float: left;
			width: 30%;
			margin-right: 5px;
			word-wrap: break-word;
			background-color: #eee;
			margin-bottom: 5px;
			padding-top: 3px;
			padding-bottom: 3px;
		}
		div.rightThirdApi {
			float: right;
			width: 18%;
			margin-right: 5px;
			word-wrap: break-word;
			background-color: #eee;
			margin-bottom: 5px;
			padding-top: 3px;
			padding-bottom: 3px;
		}
		div.row {
			clear: both;
		}
		div.container {
			padding-bottom: 35px;
		}
		ul {
			margin-bottom: 0px;
		}
	</style>
	<script>
	  function clickStowaway() {
	  
	      document.location="index.html";
	  }
	  </script>
	<script type="text/javascript">

	  var _gaq = _gaq || [];
	  _gaq.push(['_setAccount', 'UA-25079122-1']);
	  _gaq.push(['_trackPageview']);

	  (function() {
	    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
	    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
	    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	  })();

	</script>
</head>
<body>

	<div id="outermost">
		<div id="inner">
		
		<div id="title"><img src="stowaway.jpg" id="stow" alt="Stowaway" onclick="clickStowaway();" /></div>
		<div id="blurb">A static analysis tool and permission map for identifying permission use in Android applications</div>
		
		<div id="authors"><a href="http://www.cs.berkeley.edu/~afelt/">Adrienne Porter Felt</a>, <a href="http://www.cs.berkeley.edu/~emc/">Erika Chin</a>, <a href="http://www.vividmachines.com">Steve Hanna</a>, <a href="http://www.cs.berkeley.edu/~dawnsong/">Dawn Song</a>, <a href="http://www.cs.berkeley.edu/~daw/">David Wagner</a> (UC Berkeley)</div>
		<div class="permissions">Contact: android at eecs.berkeley.edu</div>
		
		<div class="permissions">
			<span class="ttitle">Overprivilege</span><br />
Stowaway thinks your application has the following extra permissions:<ul><li>android.permission.CAMERA
</li><li>android.permission.NFC
</li><li>android.permission.WRITE_EXTERNAL_STORAGE
</li></ul>			
		</div>
		
		<div class="permissions">
			<span class="ttitle">Required Permissions</span><br />
			
Stowaway thinks your application legitimately needs some permissions.
				<br />
				Here, we list
				the permission-protected API calls, Content Providers, and Intents used by your application.<ul><li>android.accounts.AccountManager.addAccount: [android.permission.MANAGE_ACCOUNTS]
</li><li>android.accounts.AccountManager.addAccountExplicitly: [android.permission.AUTHENTICATE_ACCOUNTS]
</li><li>android.accounts.AccountManager.blockingGetAuthToken: [android.permission.USE_CREDENTIALS]
</li><li>android.accounts.AccountManager.getAccounts: [android.permission.GET_ACCOUNTS]
</li><li>android.accounts.AccountManager.getAccountsByType: [android.permission.GET_ACCOUNTS]
</li><li>android.accounts.AccountManager.getAuthToken: [android.permission.USE_CREDENTIALS]
</li><li>android.accounts.AccountManager.getPassword: [android.permission.AUTHENTICATE_ACCOUNTS]
</li><li>android.accounts.AccountManager.getUserData: [android.permission.AUTHENTICATE_ACCOUNTS]
</li><li>android.accounts.AccountManager.invalidateAuthToken: [android.permission.MANAGE_ACCOUNTS or android.permission.USE_CREDENTIALS]
</li><li>android.accounts.AccountManager.setAuthToken: [android.permission.AUTHENTICATE_ACCOUNTS]
</li><li>android.accounts.AccountManager.setUserData: [android.permission.AUTHENTICATE_ACCOUNTS]
</li><li>android.telephony.TelephonyManager.getLine1Number: [android.permission.READ_PHONE_STATE]
</li><li>org.apache.http.impl.client.DefaultHttpClient.<init>: [android.permission.INTERNET]
</li><li>Intent android.intent.action.CALL requires android.permission.CALL_PHONE
</li><li>Intent android.intent.action.CALL requires android.permission.CALL_PHONE
</li></ul>			
	</div>
	

					<span class="ttitle">Reflection Errors</span><br />Stowaway was unable to figure out the targets of some reflective calls. Because Stowaway doesn't understand these reflective calls, it might not have reported a permission that your application needs. Before removing any permissions, check whether these reflective calls use those permissions. The difficult reflective calls are in these methods:<br /><ul><li>com/actionbarsherlock/ActionBarSherlock/wrap</li><li>com/actionbarsherlock/internal/nineoldandroids/animation/PropertyValuesHolder$FloatPropertyValuesHolder/setAnimatedValue</li><li>com/actionbarsherlock/internal/nineoldandroids/animation/PropertyValuesHolder/setupValue</li><li>com/actionbarsherlock/internal/nineoldandroids/animation/PropertyValuesHolder/setAnimatedValue</li><li>com/actionbarsherlock/internal/nineoldandroids/animation/PropertyValuesHolder/setupSetterAndGetter</li><li>com/actionbarsherlock/internal/nineoldandroids/animation/PropertyValuesHolder$IntPropertyValuesHolder/setAnimatedValue</li><li>com/actionbarsherlock/view/MenuInflater$MenuState/newInstance</li></ul></div>
	<div>Do you think the results here are wrong?  If so, please <a href="http://code.google.com/p/android-permission/issues/list">file a bug report</a>.</div>

	</div>
	</div>

</body>
</html>
